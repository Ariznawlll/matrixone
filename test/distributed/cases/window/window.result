drop table if exists t1;
create table t1 (a int, b datetime);
insert into t1 values(1, '2020-11-11'), (2, '2020-11-12'), (3, '2020-11-13');
select sum(a) over(partition by a order by b range between interval 1 day preceding and interval 2 day following) from t1;
sum(a) over (partition by a order by b range between interval(1, day) preceding and interval(2, day) following)
1
2
3
drop table if exists t1;
create table t1 (a int, b date);
insert into t1 values(1, '2020-11-11'), (2, '2020-11-12'), (3, '2020-11-13'), (1, '2020-11-11'), (2, '2020-11-12'), (3, '2020-11-13'), (1, '2020-11-11'), (2, '2020-11-12'), (3, '2020-11-13');
select max(a) over(order by b range between interval 1 day preceding and interval 2 day following) from t1;
max(a) over (order by b range between interval(1, day) preceding and interval(2, day) following)
3
3
3
3
3
3
3
3
3
drop table if exists t1;
create table t1 (a int, b time);
insert into t1 values(1, 112233), (2, 122233), (3, 132233), (1, 112233), (2, 122233), (3, 132233), (1, 112233), (2, 122233), (3, 132233);
select min(a) over(order by b range between interval 1 hour preceding and current row) from t1;
min(a) over (order by b range between interval(1, hour) preceding and current row)
1
1
1
1
1
1
2
2
2
drop table if exists t1;
create table t1 (a int, b timestamp);
insert into t1 values(1, '2020-11-11'), (2, '2020-11-12'), (3, '2020-11-13'), (1, '2020-11-11'), (2, '2020-11-12'), (3, '2020-11-13'), (1, '2020-11-11'), (2, '2020-11-12'), (3, '2020-11-13');
select count(*) over(order by b range current row) from t1;
count(*) over (order by b range current row)
3
3
3
3
3
3
3
3
3
drop table if exists t1;
create table t1 (a int, b int, c int);
insert into t1 values(1, 2, 1), (3, 4, 2), (5, 6, 3), (7, 8, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7);
select a, rank() over (partition by a) from t1 group by a, c;
a    rank() over (partition by a)
1    1
3    1
3    1
3    1
3    1
5    1
7    1
select a, c, rank() over (partition by a order by c) from t1 group by a, c;
a    c    rank() over (partition by a order by c)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, c, rank() over (partition by a order by c) from t1 group by a, c;
a    c    rank() over (partition by a order by c)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, c, b, rank() over (partition by a, c, b) from t1;
a    c    b    rank() over (partition by a, c, b)
1    1    2    1
3    2    4    1
3    5    4    1
3    6    4    1
3    7    4    1
5    3    6    1
7    4    8    1
select a,  b, rank() over (partition by a, b) from t1;
a    b    rank() over (partition by a, b)
1    2    1
3    4    1
3    4    1
3    4    1
3    4    1
5    6    1
7    8    1
select a, c, sum(a) over (), sum(c) over () from t1;
a    c    sum(a) over ()    sum(c) over ()
1    1    25    28
3    2    25    28
5    3    25    28
7    4    25    28
3    5    25    28
3    6    25    28
3    7    25    28
select a, c, sum(a) over (order by c), sum(c) over (order by a) from t1;
a    c    sum(a) over (order by c)    sum(c) over (order by a)
1    1    1    1
3    2    4    21
3    5    19    21
3    6    22    21
3    7    25    21
5    3    9    24
7    4    16    28
select a, sum(b), sum(sum(b)) over (partition by a), sum(sum(b)) over (partition by c) from t1 group by a, c;
a    sum(b)    sum(sum(b)) over (partition by a)    sum(sum(b)) over (partition by c)
1    2    2    2
3    4    16    4
5    6    6    6
7    8    8    8
3    4    16    4
3    4    16    4
3    4    16    4
select a, sum(b), rank() over (partition by a +1), rank() over (partition by c), c from t1 group by a, c;
a    sum(b)    rank() over (partition by a + 1)    rank() over (partition by c)    c
1    2    1    1    1
3    4    1    1    2
5    6    1    1    3
7    8    1    1    4
3    4    1    1    5
3    4    1    1    6
3    4    1    1    7
select a, sum(b), sum(sum(b))  over (partition by a) as o from t1 group by a, c;
a    sum(b)    o
1    2    2
3    4    16
3    4    16
3    4    16
3    4    16
5    6    6
7    8    8
select a, sum(b), cast(sum(sum(b))  over (partition by a+1 order by a+1 rows between 2  preceding and CURRENT row) as float) as o from t1 group by a, c;
a    sum(b)    o
1    2    2.0
3    4    4.0
3    4    8.0
3    4    12.0
3    4    12.0
5    6    6.0
7    8    8.0
select a, sum(b), sum(sum(b)) over (partition by a rows BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) from
t1 group by a, c;
a    sum(b)    sum(sum(b)) over (partition by a rows between unbounded preceding and current row)
1    2    2
3    4    4
3    4    8
3    4    12
3    4    16
5    6    6
7    8    8
select a, sum(a) over (partition by c order by b range BETWEEN 3 preceding and 4 following), c, b from t1;
a    sum(a) over (partition by c order by b range between 3 preceding and 4 following)    c    b
1    1    1    2
3    3    2    4
5    5    3    6
7    7    4    8
3    3    5    4
3    3    6    4
3    3    7    4
select a, sum(a) over (order by a) from t1;
a    sum(a) over (order by a)
1    1
3    13
3    13
3    13
3    13
5    18
7    25
select a, rank() over (partition by a) from t1;
a    rank() over (partition by a)
1    1
3    1
3    1
3    1
3    1
5    1
7    1
select a, rank() over () from t1;
a    rank() over ()
1    1
3    1
5    1
7    1
3    1
3    1
3    1
select a, sum(a) over (partition by a rows current row) from t1;
a    sum(a) over (partition by a rows current row)
1    1
3    3
3    3
3    3
3    3
5    5
7    7
select c, sum(c) over (order by c range between 1 preceding and 1 following) from t1;
c    sum(c) over (order by c range between 1 preceding and 1 following)
1    3
2    6
3    9
4    12
5    15
6    18
7    13
select c, sum(100) over (order by c range between 1 preceding and 1 following), a, b from t1;
c    sum(100) over (order by c range between 1 preceding and 1 following)    a    b
1    200    1    2
2    300    3    4
3    300    5    6
4    300    7    8
5    300    3    4
6    300    3    4
7    200    3    4
select c, sum(null) over (order by c range between 1 preceding and 1 following), a, b from t1;
c    sum(null) over (order by c range between 1 preceding and 1 following)    a    b
1    null    1    2
2    null    3    4
3    null    5    6
4    null    7    8
5    null    3    4
6    null    3    4
7    null    3    4
select a, b, c, rank() over (partition by a, b order by c) from t1;
a    b    c    rank() over (partition by a, b order by c)
1    2    1    1
3    4    2    1
3    4    5    2
3    4    6    3
3    4    7    4
5    6    3    1
7    8    4    1
select a, c, rank() over(partition by a order by c rows current row) from t1;
a    c    rank() over (partition by a order by c rows current row)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, row_number() over (partition by a) from t1 group by a, c;
a    row_number() over (partition by a)
1    1
3    1
3    2
3    3
3    4
5    1
7    1
select a, c, row_number() over (partition by a order by c) from t1 group by a, c;
a    c    row_number() over (partition by a order by c)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, c, row_number() over (partition by a order by c) from t1 group by a, c;
a    c    row_number() over (partition by a order by c)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, c, b, row_number() over (partition by a, c, b) from t1;
a    c    b    row_number() over (partition by a, c, b)
1    1    2    1
3    2    4    1
3    5    4    1
3    6    4    1
3    7    4    1
5    3    6    1
7    4    8    1
select a,  b, row_number() over (partition by a, b) from t1;
a    b    row_number() over (partition by a, b)
1    2    1
3    4    1
3    4    2
3    4    3
3    4    4
5    6    1
7    8    1
select a, sum(b), row_number() over (partition by a +1), row_number() over (partition by c), c from t1 group by a, c;
a    sum(b)    row_number() over (partition by a + 1)    row_number() over (partition by c)    c
1    2    1    1    1
3    4    1    1    2
5    6    1    1    3
7    8    1    1    4
3    4    2    1    5
3    4    3    1    6
3    4    4    1    7
select a, row_number() over (partition by a) from t1;
a    row_number() over (partition by a)
1    1
3    1
3    2
3    3
3    4
5    1
7    1
select a, row_number() over () from t1;
a    row_number() over ()
1    1
3    2
5    3
7    4
3    5
3    6
3    7
select a, b, c, row_number() over (partition by a, b order by c) from t1;
a    b    c    row_number() over (partition by a, b order by c)
1    2    1    1
3    4    2    1
3    4    5    2
3    4    6    3
3    4    7    4
5    6    3    1
7    8    4    1
select a, c, row_number() over(partition by a order by c rows current row) from t1;
a    c    row_number() over (partition by a order by c rows current row)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, dense_rank() over (partition by a) from t1 group by a, c;
a    dense_rank() over (partition by a)
1    1
3    1
3    1
3    1
3    1
5    1
7    1
select a, c, dense_rank() over (partition by a order by c) from t1 group by a, c;
a    c    dense_rank() over (partition by a order by c)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, c, dense_rank() over (partition by a order by c) from t1 group by a, c;
a    c    dense_rank() over (partition by a order by c)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, c, b, dense_rank() over (partition by a, c, b) from t1;
a    c    b    dense_rank() over (partition by a, c, b)
1    1    2    1
3    2    4    1
3    5    4    1
3    6    4    1
3    7    4    1
5    3    6    1
7    4    8    1
select a,  b, dense_rank() over (partition by a, b) from t1;
a    b    dense_rank() over (partition by a, b)
1    2    1
3    4    1
3    4    1
3    4    1
3    4    1
5    6    1
7    8    1
select a, sum(b), dense_rank() over (partition by a +1), dense_rank() over (partition by c), c from t1 group by a, c;
a    sum(b)    dense_rank() over (partition by a + 1)    dense_rank() over (partition by c)    c
1    2    1    1    1
3    4    1    1    2
5    6    1    1    3
7    8    1    1    4
3    4    1    1    5
3    4    1    1    6
3    4    1    1    7
select a, dense_rank() over (partition by a) from t1;
a    dense_rank() over (partition by a)
1    1
3    1
3    1
3    1
3    1
5    1
7    1
select a, dense_rank() over () from t1;
a    dense_rank() over ()
1    1
3    1
5    1
7    1
3    1
3    1
3    1
select a, b, c, dense_rank() over (partition by a, b order by c) from t1;
a    b    c    dense_rank() over (partition by a, b order by c)
1    2    1    1
3    4    2    1
3    4    5    2
3    4    6    3
3    4    7    4
5    6    3    1
7    8    4    1
select a, c, dense_rank() over(partition by a order by c rows current row) from t1;
a    c    dense_rank() over (partition by a order by c rows current row)
1    1    1
3    2    1
3    5    2
3    6    3
3    7    4
5    3    1
7    4    1
select a, c, rank() over(order by a), row_number() over(order by a), dense_rank() over(order by a) from t1;
a    c    rank() over (order by a)    row_number() over (order by a)    dense_rank() over (order by a)
1    1    1    1    1
3    2    2    2    2
3    5    2    3    2
3    6    2    4    2
3    7    2    5    2
5    3    6    6    3
7    4    7    7    4
drop table if exists t1;
create table t1 (a int, b decimal(7, 2));
insert into t1 values(1, 12.12), (2, 123.13), (3, 456.66), (4, 1111.34);
select a, sum(b) over (partition by a order by a) from t1;
a    sum(b) over (partition by a order by a)
1    12.12
2    123.13
3    456.66
4    1111.34
drop table if exists wf01;
create table wf01(i int,j int);
insert into wf01 values(1,1);
insert into wf01 values(1,4);
insert into wf01 values(1,2);
insert into wf01 values(1,4);
select * from wf01;
i    j
1    1
1    4
1    2
1    4
select i, j, sum(i+j) over (order by j desc rows unbounded preceding) foo from wf01;
i    j    foo
1    4    5
1    4    10
1    2    13
1    1    15
select i, j, sum(i+j) over (order by j desc rows between 2 preceding and 2 following) as foo from wf01;
i    j    foo
1    4    13
1    4    15
1    2    15
1    1    10
select i, j, sum(i+j) over (order by j desc rows unbounded preceding) foo from wf01 order by foo;
i    j    foo
1    4    5
1    4    10
1    2    13
1    1    15
select i, j, sum(i+j) over (order by j desc rows unbounded preceding) foo from wf01 order by foo desc;
i    j    foo
1    1    15
1    2    13
1    4    10
1    4    5
drop table if exists wf08;
create table wf08(d decimal(10,2), date date);
insert into wf08 values (10.4, '2002-06-09');
insert into wf08 values (20.5, '2002-06-09');
insert into wf08 values (10.4, '2002-06-10');
insert into wf08 values (3,    '2002-06-09');
insert into wf08 values (40.2, '2015-08-01');
insert into wf08 values (40.2, '2002-06-09');
insert into wf08 values (5,    '2015-08-01');
select * from (select rank() over (order by d) as `rank`, d, date from wf08) alias order by `rank`, d, date;
rank    d    date
1    3.00    2002-06-09
2    5.00    2015-08-01
3    10.40    2002-06-09
3    10.40    2002-06-10
5    20.50    2002-06-09
6    40.20    2002-06-09
6    40.20    2015-08-01
select * from (select dense_rank() over (order by d) as `d_rank`, d, date from wf08) alias order by `d_rank`, d, date;
d_rank    d    date
1    3.00    2002-06-09
2    5.00    2015-08-01
3    10.40    2002-06-09
3    10.40    2002-06-10
4    20.50    2002-06-09
5    40.20    2002-06-09
5    40.20    2015-08-01
drop table if exists wf07;
create table wf07 (user_id integer not null, date date);
insert into wf07 values (1, '2002-06-09');
insert into wf07 values (2, '2002-06-09');
insert into wf07 values (1, '2002-06-09');
insert into wf07 values (3, '2002-06-09');
insert into wf07 values (4, '2002-06-09');
insert into wf07 values (4, '2002-06-09');
insert into wf07 values (5, '2002-06-09');
select rank() over () r from wf07;
r
1
1
1
1
1
1
1
select dense_rank() over () r from wf07;
r
1
1
1
1
1
1
1
drop table if exists wf12;
create table wf12(d double);
insert into wf12 values (1.7976931348623157e+307);
insert into wf12 values (1);
select d, sum(d) over (rows between current row and 1 following) from wf12;
d    sum(d) over (rows between current row and 1 following)
1.7976931348623158E307    1.7976931348623158E307
1.0    1.0
drop table if exists wf06;
create table wf06 (id integer, sex char(1));
insert into wf06 values (1, 'm');
insert into wf06 values (2, 'f');
insert into wf06 values (3, 'f');
insert into wf06 values (4, 'f');
insert into wf06 values (5, 'm');
drop table if exists wf07;
create table wf07 (user_id integer not null, date date);
insert into wf07 values (1, '2002-06-09');
insert into wf07 values (2, '2002-06-09');
insert into wf07 values (1, '2002-06-09');
insert into wf07 values (3, '2002-06-09');
insert into wf07 values (4, '2002-06-09');
insert into wf07 values (4, '2002-06-09');
insert into wf07 values (5, '2002-06-09');
select id value, sum(id) over (rows unbounded preceding) from wf06 inner join wf07 on wf07.user_id = wf06.id;
value    sum(id) over (rows unbounded preceding)
1    1
1    2
2    4
3    7
4    11
4    15
5    20
drop database if exists test;
create database test;
use test;
drop table if exists bool01;
create table bool01(col1 int,col2 bool,col3 datetime);
insert into bool01 values(1, true, '2023-05-16 00:12:12');
insert into bool01 values(2, false, '1997-01-13 12:12:00');
insert into bool01 values(3, true, '2000-10-10 11:11:11');
insert into bool01 values(4, false, '1020-10-01 01:01:01');
insert into bool01 values(5, null, null);
insert into bool01 values(6, null, '1997-11-10 10:10:10');
select * from bool01;
col1    col2    col3
1    true    2023-05-16 00:12:12
2    false    1997-01-13 12:12:00
3    true    2000-10-10 11:11:11
4    false    1020-10-01 01:01:01
5    null    null
6    null    1997-11-10 10:10:10
select rank() over (partition by col2 order by col1), sum(col1) over (partition by col2 order by col3) from bool01;
rank() over (partition by col2 order by col1)    sum(col1) over (partition by col2 order by col3)
1    5
2    11
2    4
1    6
2    3
1    4
select dense_rank() over (partition by col2 order by col1), sum(col1) over (partition by col2 order by col3) from bool01;
dense_rank() over (partition by col2 order by col1)    sum(col1) over (partition by col2 order by col3)
1    5
2    11
2    4
1    6
2    3
1    4
drop table bool01;
drop table varchar01 if exists;
SQL parser error: You have an error in your SQL syntax; check the manual that corresponds to your MatrixOne server version for the right syntax to use. syntax error at line 1 column 23 near " if exists;";
create table varchar01(col1 int, col2 varchar(12) primary key);
insert into varchar01 values(1, 'dhwenfewrfew');
insert into varchar01 values(2, 'wyeuijdew');
insert into varchar01 values(3, '数据库');
insert into varchar01 values(4, 'hejwkvrewvre');
insert into varchar01 values(5, '**&');
insert into varchar01 values(6, '12345');
insert into varchar01 values(7, 'database');
select *, rank() over (partition by col2 order by col1) as tmp from varchar01;
col1    col2    tmp
5    **&    1
6    12345    1
7    database    1
1    dhwenfewrfew    1
4    hejwkvrewvre    1
2    wyeuijdew    1
3    数据库    1
select dense_rank() over (partition by col2 order by col1) as tmp from varchar01;
tmp
1
1
1
1
1
1
1
drop table varchar01;
drop table if exists char01;
create table char01 (col1 integer, col2 char(1));
create table char01 (col1 integer, col2 char(1));
table char01 already exists
insert into char01 values (1, 'm');
insert into char01 values (2, 'f');
insert into char01 values (3, 'f');
insert into char01 values (4, 'f');
insert into char01 values (5, 'm');
select * from char01;
col1    col2
1    m
2    f
3    f
4    f
5    m
select *, rank() over (partition by col2 order by col1) as tmp from char01;
col1    col2    tmp
2    f    1
3    f    2
4    f    3
1    m    1
5    m    2
select dense_rank() over (partition by col2 order by col1) as tmp from char01;
tmp
1
2
3
1
2
drop table char01;
drop table if exists text01;
create table text01(col1 int, col2 text);
insert into text01 values(1, 'vdjnekwvrewvrjewkrmbew  bkejwkvmekrememwkvrewvrew re');
insert into text01 values(2, 'vdjnekwvrewvrjewkrmbew  bkejwkvmekrememwkvrewvrew re');
insert into text01 values(3, null);
insert into text01 values(4, '数据库，数据库，数据库，mo，mo，mo!');
insert into text01 values(5, null);
insert into text01 values(6, '数据库，数据库，数据库，mo，mo，mo!');
insert into text01 values(7, null);
select * from text01;
col1    col2
1    vdjnekwvrewvrjewkrmbew  bkejwkvmekrememwkvrewvrew re
2    vdjnekwvrewvrjewkrmbew  bkejwkvmekrememwkvrewvrew re
3    null
4    数据库，数据库，数据库，mo，mo，mo!
5    null
6    数据库，数据库，数据库，mo，mo，mo!
7    null
select *, rank() over (partition by col2 order by col1) as tmp from text01;
col1    col2    tmp
3    null    1
5    null    2
7    null    3
1    vdjnekwvrewvrjewkrmbew  bkejwkvmekrememwkvrewvrew re    1
2    vdjnekwvrewvrjewkrmbew  bkejwkvmekrememwkvrewvrew re    2
4    数据库，数据库，数据库，mo，mo，mo!    1
6    数据库，数据库，数据库，mo，mo，mo!    2
select dense_rank() over (partition by col2 order by col1) as tmp from text01;
tmp
1
2
3
1
2
1
2
drop table text01;
drop table if exists int01;
create table int01(col1 tinyint unsigned, col2 int, col3 timestamp);
insert into int01 values(100, 100, '2023-05-16 00:12:12');
insert into int01 values(98, -10, '2023-05-16 00:12:12');
insert into int01 values(100, null, '1997-05-16 00:12:12');
insert into int01 values(null, 100, '2023-05-16 00:12:12');
insert into int01 values(0, null, '1997-05-16 00:12:12');
insert into int01 values(null, null, null);
select * from int01;
col1    col2    col3
100    100    2023-05-16 00:12:12
98    -10    2023-05-16 00:12:12
100    null    1997-05-16 00:12:12
null    100    2023-05-16 00:12:12
0    null    1997-05-16 00:12:12
null    null    null
select col1, avg(col2) over (partition by col1 order by col2) as tmp from int01;
col1    tmp
null    null
null    100.0
0    null
98    -10.0
100    null
100    100.0
select col1, sum(col2) over (partition by col2 order by col1) as tmp from int01;
col1    tmp
null    null
0    null
100    null
98    -10
null    100
100    200
select col1, max(col1) over (partition by col1 rows between 1 preceding and 1 following) from int01;
col1    max(col1) over (partition by col1 rows between 1 preceding and 1 following)
null    null
null    null
0    0
98    98
100    100
100    100
select col1, min(col2) over (partition by col3 order by col2) from int01;
col1    min(col2) over (partition by col3 order by col2)
null    null
100    null
0    null
98    -10
null    -10
100    -10
drop table int01;
drop table if exists float01;
create table float01(col1 float, col2 date);
insert into float01 values(12434321313.213213,'2020-01-01');
insert into float01 values(null,'1997-01-13');
insert into float01 values(-12434321313.213213,'1000-10-10');
insert into float01 values(null,'2020-01-01');
insert into float01 values(null,null);
insert into float01 values(12434321313.213213,null);
insert into float01 values(0,'1997-01-13');
insert into float01 values(0,'1000-12-12');
insert into float01 values(12434321313.213213,null);
select * from float01;
col1    col2
1.2434321E10    2020-01-01
null    1997-01-13
-1.2434321E10    1000-10-10
null    2020-01-01
null    null
1.2434321E10    null
0.0    1997-01-13
0.0    1000-12-12
1.2434321E10    null
select col2, avg(col1) over (partition by col1 order by col2) as tmp from float01;
col2    tmp
null    null
1997-01-13    null
2020-01-01    null
1000-10-10    -1.2434321408E10
1000-12-12    0.0
1997-01-13    0.0
null    1.2434321408E10
null    1.2434321408E10
2020-01-01    1.2434321408E10
select col2, sum(col1) over (partition by col2 order by col1) as tmp from float01;
col2    tmp
null    null
null    2.4868642816E10
null    2.4868642816E10
1000-10-10    -1.2434321408E10
1000-12-12    0.0
1997-01-13    null
1997-01-13    0.0
2020-01-01    null
2020-01-01    1.2434321408E10
select col2, max(col1) over (partition by col1 rows between 1 preceding and 1 following) from float01;
col2    max(col1) over (partition by col1 rows between 1 preceding and 1 following)
1997-01-13    null
2020-01-01    null
null    null
1000-10-10    -1.2434321E10
1997-01-13    0.0
1000-12-12    0.0
2020-01-01    1.2434321E10
null    1.2434321E10
null    1.2434321E10
select col2, min(col1) over (partition by col2 order by col2) from float01;
col2    min(col1) over (partition by col2 order by col2)
null    null
null    1.2434321E10
null    1.2434321E10
1000-10-10    -1.2434321E10
1000-12-12    0.0
1997-01-13    0.0
1997-01-13    0.0
2020-01-01    1.2434321E10
2020-01-01    1.2434321E10
drop table float01;
drop table if exists double01;
create table double01(d double);
insert into double01 values (2);
insert into double01 values (2);
insert into double01 values (3);
insert into double01 values (1);
insert into double01 values (1);
insert into double01 values (1.2);
insert into double01 values (null);
insert into double01 values (null);
select * from double01;
d
2.0
2.0
3.0
1.0
1.0
1.2
null
null
select d, sum(d) over (partition by d order by d), avg(d) over (order by d) from double01;
d    sum(d) over (partition by d order by d)    avg(d) over (order by d)
null    null    null
null    null    null
1.0    2.0    1.0
1.0    2.0    1.0
1.2    1.2    1.0666666666666667
2.0    4.0    1.44
2.0    4.0    1.44
3.0    3.0    1.7
select d, sum(d) over (partition by d order by d), avg(d) over (order by d rows between 1 preceding and 1 following) from double01;
d    sum(d) over (partition by d order by d)    avg(d) over (order by d rows between 1 preceding and 1 following)
null    null    null
null    null    1.0
1.0    2.0    1.0
1.0    2.0    1.0666666666666667
1.2    1.2    1.4000000000000001
2.0    4.0    1.7333333333333334
2.0    4.0    2.3333333333333335
3.0    3.0    2.5
select d, max(d) over (partition by d), avg(d) over () from double01;
[unknown result because it is related to issue#10043]
select d, sum(d) over (partition by d order by d), avg(d) over () from double01;
[unknown result because it is related to issue#10043]
truncate double01;
select * from double01;
d
insert into double01 values (1.7976931348623157e+307);
insert into double01 values (1);
select * from double01;
d
1.7976931348623158E307
1.0
select d, sum(d) over (rows between current row and 1 following) from double01;
d    sum(d) over (rows between current row and 1 following)
1.7976931348623158E307    1.7976931348623158E307
1.0    1.0
drop table double01;
drop table if exists decimal01;
create table decimal01(d decimal(38,3));
insert into decimal01 values (28888888888888888888888888888888888.1234);
insert into decimal01 values (99999999999999999999999999999999999.83293323);
insert into decimal01 values (0);
insert into decimal01 values (-7841512312154312313158786541.342152121242143);
insert into decimal01 values (-7841512312154312313158786541.342152121242143);
insert into decimal01 values (99999999999999999999999999999999999.83293323);
insert into decimal01 values (null);
insert into decimal01 values (null);
select * from decimal01;
d
28888888888888888888888888888888888.123
99999999999999999999999999999999999.833
0.000
-7841512312154312313158786541.342
-7841512312154312313158786541.342
99999999999999999999999999999999999.833
null
null
select max(d) over (partition by d order by d) from decimal01;
max(d) over (partition by d order by d)
null
null
-7841512312154312313158786541.342
-7841512312154312313158786541.342
0.000
28888888888888888888888888888888888.123
99999999999999999999999999999999999.833
99999999999999999999999999999999999.833
select min(d) over (partition by d order by d) from decimal01;
min(d) over (partition by d order by d)
null
null
-7841512312154312313158786541.342
-7841512312154312313158786541.342
0.000
28888888888888888888888888888888888.123
99999999999999999999999999999999999.833
99999999999999999999999999999999999.833
select avg(d) over (partition by d) from decimal01;
invalid input: Decimal128 Div overflow: 28888888888888888888888888888888888123(Scale:3)/1(Scale:0)
select sum(d) over (partition by d order by d rows between 1 preceding and 1 following) from decimal01;
[unknown result because it is related to issue#10043]
drop table decimal01;
drop table if exists date01;
create table date01(id date);
insert into date01 values ('2002-06-09');
insert into date01 values ('2002-06-09');
insert into date01 values ('2002-06-10');
insert into date01 values ('2002-06-09');
insert into date01 values ('2015-08-01');
insert into date01 values ('2002-06-09');
insert into date01 values ('2015-08-01');
select id, rank() over () from date01;
id    rank() over ()
2002-06-09    1
2002-06-09    1
2002-06-10    1
2002-06-09    1
2015-08-01    1
2002-06-09    1
2015-08-01    1
select id, dense_rank() over (order by id) from date01;
id    dense_rank() over (order by id)
2002-06-09    1
2002-06-09    1
2002-06-09    1
2002-06-09    1
2002-06-10    2
2015-08-01    3
2015-08-01    3
select id, max(id) over (order by id rows 2 preceding) from date01;
id    max(id) over (order by id rows 2 preceding)
2002-06-09    2002-06-09
2002-06-09    2002-06-09
2002-06-09    2002-06-09
2002-06-09    2002-06-09
2002-06-10    2002-06-10
2015-08-01    2015-08-01
2015-08-01    2015-08-01
select min(id) over (partition by id order by id range interval 2 day preceding) from date01;
min(id) over (partition by id order by id range interval(2, day) preceding)
2002-06-09
2002-06-09
2002-06-09
2002-06-09
2002-06-10
2015-08-01
2015-08-01
select id, count(id) over (order by id rows between 2 preceding and 1 following) from date01;
id    count(id) over (order by id rows between 2 preceding and 1 following)
2002-06-09    2
2002-06-09    3
2002-06-09    4
2002-06-09    4
2002-06-10    4
2015-08-01    4
2015-08-01    3
select id, count(id) over (order by date_add(id,interval 3 day) rows between 2 preceding and 1 following) from date01;
id    count(id) over (order by date_add(id, interval(3, day)) rows between 2 preceding and 1 following)
2002-06-09    2
2002-06-09    3
2002-06-09    4
2002-06-09    4
2002-06-10    4
2015-08-01    4
2015-08-01    3
drop table date01;
drop table if exists test01;
create table test01(i int, j int);
insert into test01 values (1,null);
insert into test01 values (1,null);
insert into test01 values (1,1);
insert into test01 values (1,null);
insert into test01 values (1,2);
insert into test01 values (2,1);
insert into test01 values (2,2);
insert into test01 values (2,null);
insert into test01 values (2,null);
select * from test01;
i    j
1    null
1    null
1    1
1    null
1    2
2    1
2    2
2    null
2    null
select i, j, sum(j) over (partition by i order by j rows unbounded preceding) from test01;
i    j    sum(j) over (partition by i order by j rows unbounded preceding)
1    null    null
1    null    null
1    null    null
1    1    1
1    2    3
2    null    null
2    null    null
2    1    1
2    2    3
select i, j, avg(j) over (partition by i order by j rows unbounded preceding) from test01;
i    j    avg(j) over (partition by i order by j rows unbounded preceding)
1    null    null
1    null    null
1    null    null
1    1    1.0
1    2    1.5
2    null    null
2    null    null
2    1    1.0
2    2    1.5
select i, j, max(j) over (partition by i order by j rows unbounded preceding) from test01;
i    j    max(j) over (partition by i order by j rows unbounded preceding)
1    null    null
1    null    null
1    null    null
1    1    1
1    2    2
2    null    null
2    null    null
2    1    1
2    2    2
select i, j, min(j) over (partition by i order by j rows unbounded preceding) from test01;
[unknown result because it is related to issue#10043]
drop table test01;
drop table if exists row01;
create table row01(i int,j int);
insert into row01 values(1,1);
insert into row01 values(1,4);
insert into row01 values(1,2);
insert into row01 values(1,4);
select * from row01;
i    j
1    1
1    4
1    2
1    4
select i, j, sum(i+j) over (rows unbounded preceding) foo from row01;
i    j    foo
1    1    2
1    4    7
1    2    10
1    4    15
select i, j, sum(i+j) over (rows between unbounded preceding and current row) foo from row01;
i    j    foo
1    1    2
1    4    7
1    2    10
1    4    15
select i, j, sum(i+j) over (rows unbounded preceding) foo from row01 order by foo;
i    j    foo
1    1    2
1    4    7
1    2    10
1    4    15
select i, j, sum(i+j) over (rows unbounded preceding) foo from row01 order by foo desc;
i    j    foo
1    4    15
1    2    10
1    4    7
1    1    2
select i, j, sum(i+j) over (order by j desc rows unbounded preceding) foo from row01;
i    j    foo
1    4    5
1    4    10
1    2    13
1    1    15
select i, j, sum(i+j) over (order by j desc rows between 2 preceding and 2 following) as foo from row01;
i    j    foo
1    4    13
1    4    15
1    2    15
1    1    10
select i, j, sum(i+j) over (order by j desc rows unbounded preceding) foo from row01 order by foo;
i    j    foo
1    4    5
1    4    10
1    2    13
1    1    15
select i, j, sum(i+j) over (order by j desc rows unbounded preceding) foo from row01 order by foo desc;
i    j    foo
1    1    15
1    2    13
1    4    10
1    4    5
select i, j, sum(i+j) over (rows unbounded preceding) foo from row01 order by foo desc limit 3;
i    j    foo
1    4    15
1    2    10
1    4    7
select i, j, sum(i+j) over (order by j rows unbounded preceding) foo from row01;
i    j    foo
1    1    2
1    2    5
1    4    10
1    4    15
select i, j, sum(i+j) over (order by j rows unbounded preceding) foo from row01 order by foo;
i    j    foo
1    1    2
1    2    5
1    4    10
1    4    15
select i, j, sum(i+j) over (order by j rows unbounded preceding) foo from row01 order by foo desc;
i    j    foo
1    4    15
1    4    10
1    2    5
1    1    2
select i, j, sum(i+j) over (order by j rows between 2 preceding and 1 preceding) foo from row01 order by foo desc;
[unknown result because it is related to issue#10043]
select i, j, sum(i+j) over (order by j rows between 2 following and 1 following) foo from row01 order by foo desc;
[unknown result because it is related to issue#10043]
select i, j, sum(i+j) over (order by j rows between -1 following and 1 following) foo from row01 order by foo desc;
SQL parser error: You have an error in your SQL syntax; check the manual that corresponds to your MatrixOne server version for the right syntax to use. syntax error at line 1 column 53 near " -1 following and 1 following) foo from row01 order by foo desc;";
select i, j, sum(i+j) over (order by j rows between 2 preceding and -10 following) foo from row01 order by foo desc;
SQL parser error: You have an error in your SQL syntax; check the manual that corresponds to your MatrixOne server version for the right syntax to use. syntax error at line 1 column 69 near " -10 following) foo from row01 order by foo desc;";
drop table row01;
drop table if exists wf02;
create table wf02 (i int) ;
insert into wf02 (i) values (1);
insert into wf02 (i) values (2);
insert into wf02 (i) values (3);
insert into wf02 (i) values (4);
insert into wf02 (i) values (5);
select * from wf02;
i
1
2
3
4
5
select i, sum(i) over (rows between 0 preceding and 2 following) from wf02;
i    sum(i) over (rows between 0 preceding and 2 following)
1    6
2    9
3    12
4    9
5    5
select i, sum(i) over (order by i rows between 2 preceding and 2 following) from wf02 limit 3;
i    sum(i) over (order by i rows between 2 preceding and 2 following)
1    6
2    10
3    15
select i, sum(i * 20) over (rows between 2 preceding and 2 following) from wf02 order by i desc limit 3;
i    sum(i * 20) over (rows between 2 preceding and 2 following)
5    240
4    280
3    300
select i, avg(i) over (rows between 2 preceding and 2 following) from wf02;
i    avg(i) over (rows between 2 preceding and 2 following)
1    2.0
2    2.5
3    3.0
4    3.5
5    4.0
select i, avg(i + 100) over (rows between 2 preceding and 2 following) from wf02;
i    avg(i + 100) over (rows between 2 preceding and 2 following)
1    102.0
2    102.5
3    103.0
4    103.5
5    104.0
select i, sum(i) over (rows between 1 preceding and 2 following) from wf02;
i    sum(i) over (rows between 1 preceding and 2 following)
1    6
2    10
3    14
4    12
5    9
drop table wf02;
drop table if exists og01;
create table og01(i int, j int, k int);
insert into og01 values (1,1,1);
insert into og01 values (1,4,1);
insert into og01 values (1,2,1);
insert into og01 values (1,4,1);
insert into og01 values (1,1,2);
insert into og01 values (1,4,2);
insert into og01 values (1,2,2);
insert into og01 values (1,4,2);
insert into og01 values (1,1,3);
insert into og01 values (1,4,3);
insert into og01 values (1,2,3);
insert into og01 values (1,4,3);
insert into og01 values (1,1,4);
insert into og01 values (1,4,4);
insert into og01 values (1,2,4);
insert into og01 values (1,4,4);
select * from og01;
i    j    k
1    1    1
1    4    1
1    2    1
1    4    1
1    1    2
1    4    2
1    2    2
1    4    2
1    1    3
1    4    3
1    2    3
1    4    3
1    1    4
1    4    4
1    2    4
1    4    4
select k, sum(k) over (rows unbounded preceding) wf from og01;
k    wf
1    1
1    2
1    3
1    4
2    6
2    8
2    10
2    12
3    15
3    18
3    21
3    24
4    28
4    32
4    36
4    40
select k, min(i), sum(j), sum(k) over (rows unbounded preceding) wf from og01 group by (k);
k    min(i)    sum(j)    wf
1    1    11    1
2    1    11    3
3    1    11    6
4    1    11    10
select k, min(i), sum(j), sum(k) over (rows unbounded preceding) wf from og01 group by (k) order by wf desc;
k    min(i)    sum(j)    wf
4    1    11    10
3    1    11    6
2    1    11    3
1    1    11    1
select k, sum(k) over (rows unbounded preceding) foo from og01 group by (k);
k    foo
1    1
2    3
3    6
4    10
select k, avg(distinct j), sum(k) over (rows unbounded preceding) foo from og01 group by (k);
k    avg(distinct j)    foo
1    2.3333333333333335    1
2    2.3333333333333335    3
3    2.3333333333333335    6
4    2.3333333333333335    10
select k, sum(k+1) over (rows unbounded preceding) foo from og01 group by (k);
k    foo
1    2
2    5
3    9
4    14
select k, sum(k+1) over (order by k desc rows unbounded preceding) foo from og01 group by (k);
k    foo
4    5
3    9
2    12
1    14
drop table og01;
drop table if exists og02;
create table og02 (id integer, sex char(1));
insert into og02 values (1, 'm');
insert into og02 values (2, 'f');
insert into og02 values (3, 'f');
insert into og02 values (4, 'f');
insert into og02 values (5, 'm');
insert into og02 values (10, null);
insert into og02 values (11, null);
select * from og02;
id    sex
1    m
2    f
3    f
4    f
5    m
10    null
11    null
drop table if exists og03;
create table og03(c char(1));
insert into og03 values ('m');
select * from og03;
c
m
select sex, avg(id), row_number() over (partition by sex) from og02
group by sex order by sex desc;
sex    avg(id)    row_number() over (partition by sex)
m    3.0    1
f    3.0    1
null    10.5    1
select sex, avg(id), row_number() over (partition by sex) from og02
group by sex order by sex desc;
sex    avg(id)    row_number() over (partition by sex)
m    3.0    1
f    3.0    1
null    10.5    1
select sex, avg(id), sum(avg(id) + 10) over (rows unbounded preceding) from og02
group by sex order by sex desc;
sex    avg(id)    sum(avg(id) + 10) over (rows unbounded preceding)
m    3.0    13.0
f    3.0    26.0
null    10.5    46.5
select sex, avg(id), row_number() over (partition by sex) from og02
group by sex having sex='m' or sex is null order by sex desc;
sex    avg(id)    row_number() over (partition by sex)
m    3.0    1
null    10.5    1
select sex, avg(id), sum(avg(id)) over (rows unbounded preceding) from og02
group by sex having sex='m' or sex='f' or sex is null
order by sex desc;
sex    avg(id)    sum(avg(id)) over (rows unbounded preceding)
m    3.0    3.0
f    3.0    6.0
null    10.5    16.5
select sex, avg(id), row_number() over (partition by sex) from og02
group by sex having sex=(select c from og03 limit 1) or sex is null
order by sex desc;
sex    avg(id)    row_number() over (partition by sex)
m    3.0    1
null    10.5    1
select sex, avg(id), sum(avg(id)) over (rows unbounded preceding) from og02
group by sex having sex=(select c from og03 limit 1) or sex='f' or sex is null
order by sex desc;
sex    avg(id)    sum(avg(id)) over (rows unbounded preceding)
m    3.0    3.0
f    3.0    6.0
null    10.5    16.5
select sex, avg(id), sum(avg(id)) over (order by sex rows unbounded preceding) from og02
group by sex
order by sex desc;
sex    avg(id)    sum(avg(id)) over (order by sex rows unbounded preceding)
m    3.0    16.5
f    3.0    13.5
null    10.5    10.5
select sex, avg(id), sum(avg(id)) over (order by sex rows unbounded preceding) from og02
group by sex having sex=(select c from og03 limit 1) or sex='f' or sex is null
order by sex desc;
sex    avg(id)    sum(avg(id)) over (order by sex rows unbounded preceding)
m    3.0    16.5
f    3.0    13.5
null    10.5    10.5
drop table og02;
drop table og03;
drop table if exists date02;
create table date02(col1 date,col2 datetime, col3 time, col4 timestamp);
insert into date02 values ('2002-06-09','1997-01-13 00:00:00','12:00:59','2023-05-16 00:12:12');
insert into date02 values ('2002-06-09','2020-02-20 00:00:00','11:12:12','2023-05-18 12:12:12');
insert into date02 values ('2002-06-10','1997-01-13 00:00:00','12:00:59','2023-05-16 00:12:12');
insert into date02 values ('2002-06-09','2020-02-20 00:00:00','11:12:12','2023-05-16 00:12:12');
insert into date02 values ('2015-08-01',null,null,'2023-05-18 12:12:12');
insert into date02 values ('2002-06-09',null,'01:01:01',null);
insert into date02 values ('2015-08-01','1990-01-01 01:02:03',null,null);
select * from date02;
col1    col2    col3    col4
2002-06-09    1997-01-13 00:00:00    12:00:59    2023-05-16 00:12:12
2002-06-09    2020-02-20 00:00:00    11:12:12    2023-05-18 12:12:12
2002-06-10    1997-01-13 00:00:00    12:00:59    2023-05-16 00:12:12
2002-06-09    2020-02-20 00:00:00    11:12:12    2023-05-16 00:12:12
2015-08-01    null    null    2023-05-18 12:12:12
2002-06-09    null    01:01:01    null
2015-08-01    1990-01-01 01:02:03    null    null
select dense_rank() over (partition by col1 order by date_format(col1,'%m-%d-%Y')) from date02;
SQL parser error: Window '<unnamed window>' with RANGE N PRECEDING/FOLLOWING frame requires exactly one ORDER BY expression, of numeric or temporal type
select max(col2) over (partition by col3 order by date(col2) desc) from date02;
max(col2) over (partition by col3 order by date(col2) desc)
1990-01-01 01:02:03
1990-01-01 01:02:03
null
2020-02-20 00:00:00
2020-02-20 00:00:00
1997-01-13 00:00:00
1997-01-13 00:00:00
select rank() over (order by col1 range interval 2 day preceding) from date02;
rank() over (order by col1 range interval(2, day) preceding)
1
1
1
1
5
6
6
select max(col3) over (order by date_add(col2,interval 2 minute) rows  between 2 preceding and 1 following) from date02;
max(col3) over (order by date_add(col2, interval(2, minute)) rows between 2 preceding and 1 following)
01:01:01
01:01:01
12:00:59
12:00:59
12:00:59
12:00:59
12:00:59
select min(col3) over (partition by col4 order by date_sub(col2,interval 2 minute) rows  between 2 preceding and 1 following) from date02;
min(col3) over (partition by col4 order by date_sub(col2, interval(2, minute)) rows between 2 preceding and 1 following)
01:01:01
01:01:01
12:00:59
11:12:12
11:12:12
11:12:12
11:12:12
select max(col3) over (order by year(col2) rows  between current row and unbounded following) from date02;
max(col3) over (order by year(col2) rows between current row and unbounded following)
12:00:59
12:00:59
12:00:59
12:00:59
12:00:59
11:12:12
11:12:12
select dense_rank() over (order by month(col3)) from date02;
dense_rank() over (order by month(col3))
1
1
2
2
2
2
2
drop table date02;
drop table if exists dense_rank01;
create table dense_rank01 (id integer, sex char(1));
insert into dense_rank01 values (1, 'm');
insert into dense_rank01 values (2, 'f');
insert into dense_rank01 values (3, 'f');
insert into dense_rank01 values (4, 'f');
insert into dense_rank01 values (5, 'm');
select * from dense_rank01;
id    sex
1    m
2    f
3    f
4    f
5    m
drop table if exists dense_rank02;
create table dense_rank02 (user_id integer not null, date date);
insert into dense_rank02 values (1, '2002-06-09');
insert into dense_rank02 values (2, '2002-06-09');
insert into dense_rank02 values (1, '2002-06-09');
insert into dense_rank02 values (3, '2002-06-09');
insert into dense_rank02 values (4, '2002-06-09');
insert into dense_rank02 values (4, '2002-06-09');
insert into dense_rank02 values (5, '2002-06-09');
select * from dense_rank02;
user_id    date
1    2002-06-09
2    2002-06-09
1    2002-06-09
3    2002-06-09
4    2002-06-09
4    2002-06-09
5    2002-06-09
select rank() over (order by user_id) r from dense_rank02;
r
1
1
3
4
5
5
7
select dense_rank() over (order by user_id) r from dense_rank02;
r
1
1
2
3
4
4
5
select rank() over () r from dense_rank02;
r
1
1
1
1
1
1
1
select dense_rank() over () r from dense_rank02;
r
1
1
1
1
1
1
1
select id, sex, rank() over (order by sex rows unbounded preceding) from dense_rank01 order by id;
id    sex    rank() over (order by sex rows unbounded preceding)
1    m    4
2    f    1
3    f    1
4    f    1
5    m    4
select id, sex, dense_rank() over (order by sex rows unbounded preceding) from dense_rank01 order by id;
id    sex    dense_rank() over (order by sex rows unbounded preceding)
1    m    2
2    f    1
3    f    1
4    f    1
5    m    2
select sex, rank() over (order by sex desc rows unbounded preceding) `rank`, avg(distinct id) as uids from dense_rank01 u, dense_rank02
where dense_rank02.user_id = u.id group by sex order by sex;
sex    rank    uids
f    2    3.0
m    1    3.0
select sex, dense_rank() over (order by sex desc rows unbounded preceding) `rank`, avg(distinct id) as uids from dense_rank01 u, dense_rank02
where dense_rank02.user_id = u.id group by sex order by sex;
sex    rank    uids
f    2    3.0
m    1    3.0
select  sex, avg(id) as uids, rank() over (order by avg(id)) `rank` from dense_rank01 u, dense_rank02
where dense_rank02.user_id = u.id group by sex;
sex    uids    rank
m    2.3333333333333335    1
f    3.25    2
select  sex, avg(id) as uids, dense_rank() over (order by avg(id)) `rank` from dense_rank01 u, dense_rank02
where dense_rank02.user_id = u.id group by sex;
sex    uids    rank
m    2.3333333333333335    1
f    3.25    2
select  sex, avg(distinct id) as uids, rank() over (order by avg(distinct id) desc) `rank` from dense_rank01 u, dense_rank02
where dense_rank02.user_id = u.id group by sex
order by sex;
sex    uids    rank
f    3.0    1
m    3.0    1
select  sex, avg(distinct id) as uids, dense_rank() over (order by avg(distinct id) desc) `p_rank` from dense_rank01 u, dense_rank02
where dense_rank02.user_id = u.id group by sex
order by sex;
sex    uids    p_rank
f    3.0    1
m    3.0    1
select  sex, avg(id) as uids, rank() over (order by avg(id) desc) `rank` from dense_rank01 u, dense_rank02
where dense_rank02.user_id = u.id group by sex
order by `rank` desc;
sex    uids    rank
m    2.3333333333333335    2
f    3.25    1
select  sex, avg(id) as uids, dense_rank() over (order by avg(id) desc) `p_rank`
from dense_rank01 u, dense_rank02
where dense_rank02.user_id = u.id group by sex
order by `p_rank` desc;
sex    uids    p_rank
m    2.3333333333333335    2
f    3.25    1
insert into dense_rank01 values (10, null);
insert into dense_rank01 values (11, null);
select id, sex, rank() over (order by sex rows unbounded preceding)from dense_rank01 order by id;
id    sex    rank() over (order by sex rows unbounded preceding)
1    m    6
2    f    3
3    f    3
4    f    3
5    m    6
10    null    1
11    null    1
select id, sex, dense_rank() over (order by sex rows unbounded preceding) from dense_rank01 order by id;
id    sex    dense_rank() over (order by sex rows unbounded preceding)
1    m    3
2    f    2
3    f    2
4    f    2
5    m    3
10    null    1
11    null    1
select id, sex, rank() over (order by sex desc rows unbounded preceding) from dense_rank01 order by id;
id    sex    rank() over (order by sex desc rows unbounded preceding)
1    m    1
2    f    3
3    f    3
4    f    3
5    m    1
10    null    6
11    null    6
select id value,
sum(id) over (rows unbounded preceding)
from dense_rank01 left join dense_rank02 on dense_rank02.user_id = dense_rank01.id;
value    sum(id) over (rows unbounded preceding)
1    1
1    2
2    4
3    7
4    11
4    15
5    20
10    30
11    41
select id value,
sum(id) over (rows unbounded preceding)
from dense_rank01 right join dense_rank02 on dense_rank02.user_id = dense_rank01.id;
value    sum(id) over (rows unbounded preceding)
1    1
2    3
1    4
3    7
4    11
4    15
5    20
select id value,
sum(id) over (rows unbounded preceding)
from dense_rank01 inner join dense_rank02 on dense_rank02.user_id = dense_rank01.id;
value    sum(id) over (rows unbounded preceding)
1    1
1    2
2    4
3    7
4    11
4    15
5    20
select id value,
sum(id) over (partition by id order by id rows unbounded preceding)
from dense_rank01 natural join dense_rank02;
value    sum(id) over (partition by id order by id rows unbounded preceding)
1    1
1    2
1    3
1    4
1    5
1    6
1    7
2    2
2    4
2    6
2    8
2    10
2    12
2    14
3    3
3    6
3    9
3    12
3    15
3    18
3    21
4    4
4    8
4    12
4    16
4    20
4    24
4    28
5    5
5    10
5    15
5    20
5    25
5    30
5    35
10    10
10    20
10    30
10    40
10    50
10    60
10    70
11    11
11    22
11    33
11    44
11    55
11    66
11    77
select id value,
sum(id) over (partition by id order by id rows unbounded preceding)
from dense_rank01 full join dense_rank02;
value    sum(id) over (partition by id order by id rows unbounded preceding)
1    1
1    2
1    3
1    4
1    5
1    6
1    7
2    2
2    4
2    6
2    8
2    10
2    12
2    14
3    3
3    6
3    9
3    12
3    15
3    18
3    21
4    4
4    8
4    12
4    16
4    20
4    24
4    28
5    5
5    10
5    15
5    20
5    25
5    30
5    35
10    10
10    20
10    30
10    40
10    50
10    60
10    70
11    11
11    22
11    33
11    44
11    55
11    66
11    77
select sex, avg(id), rank() over (order by avg(id) desc) from dense_rank01 group by sex order by sex;
sex    avg(id)    rank() over (order by avg(id) desc)
null    10.5    1
f    3.0    2
m    3.0    2
select sex, dense_rank() over (order by avg(id) desc) from dense_rank01 group by sex order by sex;
sex    dense_rank() over (order by avg(id) desc)
null    1
f    2
m    2
select sex, rank() over (order by avg(id) desc) from dense_rank01 group by sex order by sex;
sex    rank() over (order by avg(id) desc)
null    1
f    2
m    2
select rank() over (order by avg(id)) from dense_rank01;
rank() over (order by avg(id))
1
select dense_rank() over (order by avg(id)) from dense_rank01;
dense_rank() over (order by avg(id))
1
select avg(id), rank() over (order by avg(id)) from dense_rank01;
avg(id)    rank() over (order by avg(id))
5.142857142857143    1
select avg(id), dense_rank() over (order by avg(id)) from dense_rank01;
avg(id)    dense_rank() over (order by avg(id))
5.142857142857143    1
select avg(id), sum(avg(id)) over (order by avg(id) rows unbounded preceding) from dense_rank01;
avg(id)    sum(avg(id)) over (order by avg(id) rows unbounded preceding)
5.142857142857143    5.142857142857143
select sex, id, rank() over (partition by sex order by id desc) from dense_rank01;
[unknown result because it is related to issue#10043]
select sex, id, dense_rank() over (partition by sex order by id desc) from dense_rank01;
[unknown result because it is related to issue#10043]
select sex, id, rank() over (partition by sex order by id asc) from dense_rank01;
[unknown result because it is related to issue#10043]
select sex, id, dense_rank() over (partition by sex order by id asc) from dense_rank01;
[unknown result because it is related to issue#10043]
select sex, id, sum(id) over (partition by sex order by id asc rows unbounded preceding) summ,
rank() over (partition by sex order by id asc rows unbounded preceding) `rank` from dense_rank01;
sex    id    summ    rank
null    10    10    1
null    11    21    2
f    2    2    1
f    3    5    2
f    4    9    3
m    1    1    1
m    5    6    2
select sex, id, sum(id) over (partition by sex order by id asc rows unbounded preceding) summ,
dense_rank() over (partition by sex order by id asc rows unbounded preceding) `d_rank` from dense_rank01;
sex    id    summ    d_rank
null    10    10    1
null    11    21    2
f    2    2    1
f    3    5    2
f    4    9    3
m    1    1    1
m    5    6    2
select sex, id, sum(id) over (partition by sex order by id asc rows unbounded preceding) summ,
rank() over (partition by sex order by id asc rows unbounded preceding) `rank` from dense_rank01
order by summ;
sex    id    summ    rank
m    1    1    1
f    2    2    1
f    3    5    2
m    5    6    2
f    4    9    3
null    10    10    1
null    11    21    2
select sex, id, sum(id) over (partition by sex order by id asc rows unbounded preceding) summ,
dense_rank() over (partition by sex order by id asc rows unbounded preceding) `p_rank` from dense_rank01
order by summ;
sex    id    summ    p_rank
m    1    1    1
f    2    2    1
f    3    5    2
m    5    6    2
f    4    9    3
null    10    10    1
null    11    21    2
select sex, avg(distinct id),rank() over (order by uids desc) `uids`
from dense_rank01 u, dense_rank01 where dense_rank01.user_id = u.id group by sex
order by sex;
invalid input: ambiguouse column reference to 'sex'
select sex, avg(distinct id),rank() over (order by uids desc) `uids`
from dense_rank01 u, dense_rank02 where dense_rank02.user_id = u.id
group by sex order by sex;
invalid input: column uids does not exist
drop table dense_rank01;
drop table dense_rank02;
drop table if exists dense_rank03;
create table dense_rank03(d decimal(10,2), date date);
insert into dense_rank03 values (10.4, '2002-06-09');
insert into dense_rank03 values (20.5, '2002-06-09');
insert into dense_rank03 values (10.4, '2002-06-10');
insert into dense_rank03 values (3,    '2002-06-09');
insert into dense_rank03 values (40.2, '2015-08-01');
insert into dense_rank03 values (40.2, '2002-06-09');
insert into dense_rank03 values (5,    '2015-08-01');
select * from dense_rank03;
d    date
10.40    2002-06-09
20.50    2002-06-09
10.40    2002-06-10
3.00    2002-06-09
40.20    2015-08-01
40.20    2002-06-09
5.00    2015-08-01
select * from (select rank() over (order by d) as `rank`, d, date from dense_rank03) alias order by `rank`, d, date;
rank    d    date
1    3.00    2002-06-09
2    5.00    2015-08-01
3    10.40    2002-06-09
3    10.40    2002-06-10
5    20.50    2002-06-09
6    40.20    2002-06-09
6    40.20    2015-08-01
select * from (select dense_rank() over (order by d) as `d_rank`, d, date from dense_rank03) alias order by `d_rank`, d, date;
d_rank    d    date
1    3.00    2002-06-09
2    5.00    2015-08-01
3    10.40    2002-06-09
3    10.40    2002-06-10
4    20.50    2002-06-09
5    40.20    2002-06-09
5    40.20    2015-08-01
select * from (select rank() over (order by date) as `rank`, date, d from dense_rank03) alias order by `rank`, d desc;
rank    date    d
1    2002-06-09    40.20
1    2002-06-09    20.50
1    2002-06-09    10.40
1    2002-06-09    3.00
5    2002-06-10    10.40
6    2015-08-01    40.20
6    2015-08-01    5.00
select * from (select dense_rank() over (order by date) as `p_rank`, date, d from dense_rank03) alias order by `p_rank`, d desc;
p_rank    date    d
1    2002-06-09    40.20
1    2002-06-09    20.50
1    2002-06-09    10.40
1    2002-06-09    3.00
2    2002-06-10    10.40
3    2015-08-01    40.20
3    2015-08-01    5.00
drop table dense_rank03;
drop table if exists rank01;
create table rank01(i int, j int, k int);
insert into rank01 values (1,1,1);
insert into rank01 values (1,1,2);
insert into rank01 values (1,1,2);
insert into rank01 values (1,2,1);
insert into rank01 values (1,2,2);
insert into rank01 values (2,1,1);
insert into rank01 values (2,1,1);
insert into rank01 values (2,1,2);
insert into rank01 values (2,2,1);
insert into rank01 values (2,2,2);
select * from rank01;
i    j    k
1    1    1
1    1    2
1    1    2
1    2    1
1    2    2
2    1    1
2    1    1
2    1    2
2    2    1
2    2    2
select *, rank() over (order by i,j,k) as o_ijk,
rank() over (order by j) as o_j,
rank() over (order by k,j) as o_kj from rank01 order by i,j,k;
i    j    k    o_ijk    o_j    o_kj
1    1    1    1    1    1
1    1    2    2    1    6
1    1    2    2    1    6
1    2    1    4    7    4
1    2    2    5    7    9
2    1    1    6    1    1
2    1    1    6    1    1
2    1    2    8    1    6
2    2    1    9    7    4
2    2    2    10    7    9
drop table rank01;
drop table if exists row_number01;
create table row_number01 (id integer, sex char(1));
insert into row_number01 values (1, 'm');
insert into row_number01 values (2, 'f');
insert into row_number01 values (3, 'f');
insert into row_number01 values (4, 'f');
insert into row_number01 values (5, 'm');
select * from row_number01;
id    sex
1    m
2    f
3    f
4    f
5    m
drop table if exists row_number02;
create table row_number02 (user_id integer not null, date date);
insert into row_number02 values (1, '2002-06-09');
insert into row_number02 values (2, '2002-06-09');
insert into row_number02 values (1, '2002-06-09');
insert into row_number02 values (3, '2002-06-09');
insert into row_number02 values (4, '2002-06-09');
insert into row_number02 values (4, '2002-06-09');
insert into row_number02 values (5, '2002-06-09');
select * from row_number02;
user_id    date
1    2002-06-09
2    2002-06-09
1    2002-06-09
3    2002-06-09
4    2002-06-09
4    2002-06-09
5    2002-06-09
select user_id, row_number() over (partition by user_id) from row_number02 row_number01;
user_id    row_number() over (partition by user_id)
1    1
1    2
2    1
3    1
4    1
4    2
5    1
select sex, id, date, row_number() over (partition by date order by id) as row_no, rank() over (partition by date order by id) as `rank` from row_number01,row_number02
where row_number01.id=row_number02.user_id;
sex    id    date    row_no    rank
m    1    2002-06-09    1    1
m    1    2002-06-09    2    1
f    2    2002-06-09    3    3
f    3    2002-06-09    4    4
f    4    2002-06-09    5    5
f    4    2002-06-09    6    5
m    5    2002-06-09    7    7
select  date,id, rank() over (partition by date order by id) as `rank` from row_number01,row_number02;
date    id    rank
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
select * from (select date,id, rank() over (partition by date order by id) as `rank` from row_number01,row_number02) alias;
date    id    rank
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    2    8
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    3    15
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    4    22
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
2002-06-09    5    29
select * from (select date,id, dense_rank() over (partition by date order by id) as `p_rank` from row_number01,row_number02) t;
date    id    p_rank
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    1    1
2002-06-09    2    2
2002-06-09    2    2
2002-06-09    2    2
2002-06-09    2    2
2002-06-09    2    2
2002-06-09    2    2
2002-06-09    2    2
2002-06-09    3    3
2002-06-09    3    3
2002-06-09    3    3
2002-06-09    3    3
2002-06-09    3    3
2002-06-09    3    3
2002-06-09    3    3
2002-06-09    4    4
2002-06-09    4    4
2002-06-09    4    4
2002-06-09    4    4
2002-06-09    4    4
2002-06-09    4    4
2002-06-09    4    4
2002-06-09    5    5
2002-06-09    5    5
2002-06-09    5    5
2002-06-09    5    5
2002-06-09    5    5
2002-06-09    5    5
2002-06-09    5    5
select row_number01.*, rank() over (order by sex rows unbounded preceding), sum(id) over (order by sex,id rows unbounded preceding) from row_number01;
id    sex    rank() over (order by sex rows unbounded preceding)    sum(id) over (order by sex, id rows unbounded preceding)
2    f    1    2
3    f    1    5
4    f    1    9
1    m    4    10
5    m    4    15
select row_number01.*, dense_rank() over (order by sex rows unbounded preceding), sum(id) over (order by sex,id rows unbounded preceding) from row_number01;
id    sex    dense_rank() over (order by sex rows unbounded preceding)    sum(id) over (order by sex, id rows unbounded preceding)
2    f    1    2
3    f    1    5
4    f    1    9
1    m    2    10
5    m    2    15
select * from (select row_number01.*, sum(id) over (rows unbounded preceding), rank() over (order by sex rows unbounded preceding) from row_number01) alias order by id;
id    sex    sum(id) over (rows unbounded preceding)    rank() over (order by sex rows unbounded preceding)
1    m    1    4
2    f    3    1
3    f    6    1
4    f    10    1
5    m    15    4
select * from (select row_number01.*, sum(id) over (rows unbounded preceding), dense_rank() over (order by sex rows unbounded preceding) from row_number01) alias order by id;
id    sex    sum(id) over (rows unbounded preceding)    dense_rank() over (order by sex rows unbounded preceding)
1    m    1    2
2    f    3    1
3    f    6    1
4    f    10    1
5    m    15    2
select row_number01.*, sum(id) over (order by id rows unbounded preceding),
rank() over (order by sex,id rows between 1 preceding and 2 following),
row_number() over (order by sex,id rows unbounded preceding)
from row_number01;
id    sex    sum(id) over (order by id rows unbounded preceding)    rank() over (order by sex, id rows between 1 preceding and 2 following)    row_number() over (order by sex, id rows unbounded preceding)
2    f    3    1    1
3    f    6    2    2
4    f    10    3    3
1    m    1    4    4
5    m    15    5    5
select row_number01.*, sum(id) over (order by id rows unbounded preceding),
dense_rank() over (order by sex,id rows between 1 preceding and 2 following)
from row_number01;
id    sex    sum(id) over (order by id rows unbounded preceding)    dense_rank() over (order by sex, id rows between 1 preceding and 2 following)
2    f    3    1
3    f    6    2
4    f    10    3
1    m    1    4
5    m    15    5
select sum(id),avg(id) over (partition by sex), count(id) over (partition by sex) from row_number01;
SQL syntax error: column "row_number01.id" must appear in the GROUP BY clause or be used in an aggregate function
select * from (select id, sum(id) over (partition by sex), count(*) over (partition by sex), sex from row_number01 alias order by id) alias;
id    sum(id) over (partition by sex)    count(*) over (partition by sex)    sex
1    6    2    m
2    9    3    f
3    9    3    f
4    9    3    f
5    6    2    m
select sum(id) over (partition by sex) from row_number01;
sum(id) over (partition by sex)
9
9
9
6
6
select id, sum(id) over (partition by sex order by id
rows between 2 preceding and 1 following), sex from row_number01;
id    sum(id) over (partition by sex order by id rows between 2 preceding and 1 following)    sex
2    5    f
3    9    f
4    9    f
1    6    m
5    6    m
create view v as select id, sum(id) over (partition by sex order by id rows between 2 preceding and 1 following), sex from row_number01;
show create view v;
View    Create View
v    create view v as select id, sum(id) over (partition by sex order by id rows between 2 preceding and 1 following), sex from row_number01;
select * from v;
id    sum(id) over (partition by sex order by id rows between 2 preceding and 1 following)    sex
2    5    f
3    9    f
4    9    f
1    6    m
5    6    m
drop view v;
drop table row_number01;
drop table row_number02;
drop table if exists wf01;
create table wf01(d float);
insert into wf01 values (10);
insert into wf01 values (1);
insert into wf01 values (2);
insert into wf01 values (3);
insert into wf01 values (4);
insert into wf01 values (5);
insert into wf01 values (6);
insert into wf01 values (7);
insert into wf01 values (8);
insert into wf01 values (9);
select * from wf01;
d
10.0
1.0
2.0
3.0
4.0
5.0
6.0
7.0
8.0
9.0
select d, sum(d) over (order by d range between 2 preceding and current row),
avg(d) over (order by d range between 2 preceding and current row) from wf01;
d    sum(d) over (order by d range between 2 preceding and current row)    avg(d) over (order by d range between 2 preceding and current row)
1.0    1.0    1.0
2.0    3.0    1.5
3.0    6.0    2.0
4.0    9.0    3.0
5.0    12.0    4.0
6.0    15.0    5.0
7.0    18.0    6.0
8.0    21.0    7.0
9.0    24.0    8.0
10.0    27.0    9.0
select d, sum(d) over (order by d range between 2 preceding and 2 following),
avg(d) over (order by d range between 2 preceding and 2 following) from wf01;
d    sum(d) over (order by d range between 2 preceding and 2 following)    avg(d) over (order by d range between 2 preceding and 2 following)
1.0    6.0    2.0
2.0    10.0    2.5
3.0    15.0    3.0
4.0    20.0    4.0
5.0    25.0    5.0
6.0    30.0    6.0
7.0    35.0    7.0
8.0    40.0    8.0
9.0    34.0    8.5
10.0    27.0    9.0
select d, sum(d) over (order by d range between 2 preceding and current row),
avg(d) over (order by d range between 2 preceding and current row) from wf01;
d    sum(d) over (order by d range between 2 preceding and current row)    avg(d) over (order by d range between 2 preceding and current row)
1.0    1.0    1.0
2.0    3.0    1.5
3.0    6.0    2.0
4.0    9.0    3.0
5.0    12.0    4.0
6.0    15.0    5.0
7.0    18.0    6.0
8.0    21.0    7.0
9.0    24.0    8.0
10.0    27.0    9.0
select d, sum(d) over (order by d range between 2 preceding and 2 following),
avg(d) over (order by d range between 2 preceding and 2 following) from wf01;
d    sum(d) over (order by d range between 2 preceding and 2 following)    avg(d) over (order by d range between 2 preceding and 2 following)
1.0    6.0    2.0
2.0    10.0    2.5
3.0    15.0    3.0
4.0    20.0    4.0
5.0    25.0    5.0
6.0    30.0    6.0
7.0    35.0    7.0
8.0    40.0    8.0
9.0    34.0    8.5
10.0    27.0    9.0
select d, sum(d) over (order by d range between current row and 2 following),
avg(d) over (order by d range between current row and 2 following) from wf01;
[unknown result because it is related to issue#10043]
select d, sum(d) over (order by d range between 2 preceding and 2 following),
avg(d) over (order by d range between current row and 2 following) from wf01;
[unknown result because it is related to issue#10043]
insert into wf01 select * from wf01;
select * from wf01;
d
10.0
1.0
2.0
3.0
4.0
5.0
6.0
7.0
8.0
9.0
10.0
1.0
2.0
3.0
4.0
5.0
6.0
7.0
8.0
9.0
select d, sum(d) over (order by d range between 2 preceding and current row),
avg(d) over (order by d range between 1 preceding and current row) from wf01;
d    sum(d) over (order by d range between 2 preceding and current row)    avg(d) over (order by d range between 1 preceding and current row)
1.0    2.0    1.0
1.0    2.0    1.0
2.0    6.0    1.5
2.0    6.0    1.5
3.0    12.0    2.5
3.0    12.0    2.5
4.0    18.0    3.5
4.0    18.0    3.5
5.0    24.0    4.5
5.0    24.0    4.5
6.0    30.0    5.5
6.0    30.0    5.5
7.0    36.0    6.5
7.0    36.0    6.5
8.0    42.0    7.5
8.0    42.0    7.5
9.0    48.0    8.5
9.0    48.0    8.5
10.0    54.0    9.5
10.0    54.0    9.5
select d, sum(d) over (order by d range between 2 preceding and 2 following),
avg(d) over (order by d range between 3 preceding and 2 following) from wf01;
d    sum(d) over (order by d range between 2 preceding and 2 following)    avg(d) over (order by d range between 3 preceding and 2 following)
1.0    12.0    2.0
1.0    12.0    2.0
2.0    20.0    2.5
2.0    20.0    2.5
3.0    30.0    3.0
3.0    30.0    3.0
4.0    40.0    3.5
4.0    40.0    3.5
5.0    50.0    4.5
5.0    50.0    4.5
6.0    60.0    5.5
6.0    60.0    5.5
7.0    70.0    6.5
7.0    70.0    6.5
8.0    80.0    7.5
8.0    80.0    7.5
9.0    68.0    8.0
9.0    68.0    8.0
10.0    54.0    8.5
10.0    54.0    8.5
select d, sum(d) over (order by d range between 2 preceding and current row),
avg(d) over (order by d range between 2 preceding and current row) from wf01;
d    sum(d) over (order by d range between 2 preceding and current row)    avg(d) over (order by d range between 2 preceding and current row)
1.0    2.0    1.0
1.0    2.0    1.0
2.0    6.0    1.5
2.0    6.0    1.5
3.0    12.0    2.0
3.0    12.0    2.0
4.0    18.0    3.0
4.0    18.0    3.0
5.0    24.0    4.0
5.0    24.0    4.0
6.0    30.0    5.0
6.0    30.0    5.0
7.0    36.0    6.0
7.0    36.0    6.0
8.0    42.0    7.0
8.0    42.0    7.0
9.0    48.0    8.0
9.0    48.0    8.0
10.0    54.0    9.0
10.0    54.0    9.0
select d, sum(d) over (order by d range between 1 preceding and 2 following),
avg(d) over (order by d range between 2 preceding and 2 following) from wf01;
d    sum(d) over (order by d range between 1 preceding and 2 following)    avg(d) over (order by d range between 2 preceding and 2 following)
1.0    12.0    2.0
1.0    12.0    2.0
2.0    20.0    2.5
2.0    20.0    2.5
3.0    28.0    3.0
3.0    28.0    3.0
4.0    36.0    4.0
4.0    36.0    4.0
5.0    44.0    5.0
5.0    44.0    5.0
6.0    52.0    6.0
6.0    52.0    6.0
7.0    60.0    7.0
7.0    60.0    7.0
8.0    68.0    8.0
8.0    68.0    8.0
9.0    54.0    8.5
9.0    54.0    8.5
10.0    38.0    9.0
10.0    38.0    9.0
select d, sum(d) over (order by d range between current row and 2 following),
avg(d) over (order by d range between current row and 2 following) from wf01;
[unknown result because it is related to issue#10043]
select d, sum(d) over (order by d range between current row and 2 following),
avg(d) over (order by d range between current row and 2 following) from wf01;
[unknown result because it is related to issue#10043]
drop table wf01;
drop table if exists wf02;
create table wf02 (id integer, sex varchar(10));
insert into wf02 values (1, 'moolol');
insert into wf02 values (2, 'fdhsajhd');
insert into wf02 values (3, 'fdhsajhd');
insert into wf02 values (4, 'fdhsajhd');
insert into wf02 values (5, 'moolol');
insert into wf02 values (10, null);
insert into wf02 values (11, null);
select * from wf02;
id    sex
1    moolol
2    fdhsajhd
3    fdhsajhd
4    fdhsajhd
5    moolol
10    null
11    null
select row_number() over (partition by sex order by id rows between unbounded preceding and unbounded following), id,
sum(id) over (partition by sex order by id rows between 1 following and 2 following), sex from wf02;
[unknown result because it is related to issue#10043]
select row_number() over (partition by sex order by id rows between 1 following and 2 following), sum(id) over (partition by sex order by id
rows between 1 following and 2 following) from wf02;
[unknown result because it is related to issue#10043]
insert into wf02 values (10, null);
select rank() over (partition by sex order by id), id, sum(id) over (partition by sex order by id), sex from wf02;
rank() over (partition by sex order by id)    id    sum(id) over (partition by sex order by id)    sex
1    10    20    null
1    10    20    null
3    11    31    null
1    2    2    fdhsajhd
2    3    5    fdhsajhd
3    4    9    fdhsajhd
1    1    1    moolol
2    5    6    moolol
select id, sex, sum(id) over (partition by sex order by id rows between 2 preceding and 1 following) as a from wf02;
[unknown result because it is related to issue#10025]
select id, sex, sum(id) over (partition by sex order by id rows between 2 preceding and 1 following) as a,
row_number() over (partition by sex order by id rows between 2 preceding and 1 following) as b,
rank() over (partition by sex order by id rows between 2 preceding and 1 following) as c  from wf02;
[unknown result because it is related to issue#10025]
select id, sex, sum(id) over (partition by sex order by id rows between 2 preceding and 1 following) as a,
row_number() over (partition by sex order by id rows between 2 preceding and 1 following) as b from wf02;
[unknown result because it is related to issue#10025]
select row_number() over (partition by sex order by id rows between unbounded preceding and unbounded following), id,
sex from wf02;
[unknown result because it is related to issue#10025]
select row_number() over (partition by sex order by id rows between 1 preceding and 2 following), sum(id) over (partition by sex order by id
rows between 1 preceding and 2 following) from wf02;
[unknown result because it is related to issue#10025]
drop table wf02;
drop database test;
